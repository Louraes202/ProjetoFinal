name: Phase 1 CI

on:
  push:
    paths:
      - 'src/**'
      - 'include/**'
      - 'test/**'
  pull_request:
    paths:
      - 'src/**'
      - 'include/**'
      - 'test/**'

jobs:
  phase1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Compile with warnings and symbols
        run: gcc -Wall -Wextra -O2 -Iinclude -o portagens src/main.c src/read_files.c src/operations.c src/data.c

      # 1) Teste de lerDonos
      - name: Test lerDonos
        run: |
          ./portagens --test-donos test/donos_test.txt > out_donos.txt
          # espera encontrar pelo menos 3 entradas e ignorar a malformada
          grep -c "NIF=" out_donos.txt | grep -qE '^[23]$'

      # 2) Teste de lerCarros
      - name: Test lerCarros
        run: |
          ./portagens --test-carros test/carros_test.txt > out_carros.txt
          grep -q "Mat=" out_carros.txt

      # 3) Teste de lerSensores
      - name: Test lerSensores
        run: |
          ./portagens --test-sensores test/sensores_test.txt > out_sensores.txt
          grep -q "ID=" out_sensores.txt

      # 4) Teste de lerDistancias
      - name: Test lerDistancias
        run: |
          ./portagens --test-distancias test/distancias_test.txt > out_dist.txt
          grep -q "->" out_dist.txt

      # 5) Teste de lerPassagens
      - name: Test lerPassagens
        run: |
          ./portagens --test-passagens test/passagens_test.txt > out_pass.txt
          # verifica que hÃ¡ pelo menos 5 registos lidos
          grep -c "idVeiculo" out_pass.txt | awk '{exit !($1 >= 5)}'

      # 6) Memory & bounds check
      - name: Sanitizer check passagens
        run: |
          gcc -g -fsanitize=address -Iinclude -o port_san src/*.c
          ./port_san --test-passagens test/passagens_test.txt